package three;
import one.Merge;
public class Quick {
	static int n=0;
	public static void sort(Comparable []a)
	{
		setZero();
		sort(a, 0, a.length-1);
	}
	public static void sort(Comparable []a, int lo, int hi)
	{
		if(hi<=lo) return ;
		int j = partition(a, lo, hi);
		sort(a, lo, j);
		sort(a, j+1, hi);
	}
	public static int partition(Comparable []a, int lo, int hi)
	{
		int i = lo;
		int j = hi+1;
		int t = lo+(int)(Math.random()*(hi-lo));
		Comparable v = a[t];
		exch(a,lo, t);
		while(true)
		{
			//当与“哨兵相等时不要管他，否则会陷入无限循环”
			while(less(a[++i], v)) if(i==hi) break;
			while(less(v, a[--j])) if(j==lo) break;
			if(i >= j)
				break;
			exch(a, i, j);
		}
		exch(a, lo, j);
		return j;
	}
	public static boolean less(Comparable v, Comparable w)
	{
		n++;
		return v.compareTo(w)<=0;
	}
	public static void exch(Comparable []a,int i,int j)
	{
		Comparable r = a[i];
		a[i] = a[j];
		a[j] = r;
	}
	public static void setZero()
	{	Quick.n=0;		}
	static void caseOne()
	{
		String str= "ZYXWVVUTSRQPONMLKJIHGFEDCBA";
		String s[] = str.split("");
		System.out.println("s.length:"+s.length);
		for(int i=0;i<s.length;i++)
		{
			System.out.print(s[i]);
		}
		System.out.println();
		Quick.sort(s);
		Merge.show(s);
		System.out.printf("There are %d comparisons.",Quick.n);
	}
	static void caseTwo()
	{
		String str= "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
		String s[] = str.split("");
		System.out.println("s.length:"+s.length);
		for(int i=0;i<s.length;i++)
		{
			System.out.print(s[i]);
		}
		System.out.println();
		System.out.println("A B C D E F G H I J K L M N O P Q R S T U V W X Y Z");
		Quick.sort(s);
		Merge.show(s);
		System.out.printf("There are %d comparisons.\n",Quick.n);
	}
	public static void main(String[] args) {
		System.out.println("CASE ONE:");
		Quick.caseOne();
		System.out.println("CASE TWO:");
		Quick.caseTwo();
	
	}
}
