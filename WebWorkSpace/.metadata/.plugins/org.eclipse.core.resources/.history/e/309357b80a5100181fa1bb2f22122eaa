package four;

public class ZeroOneKnapsackInBackTracking {
	private int maxWeight;
	private int value[];
	private int weight[];
	private int maxValue = Integer.MIN_VALUE;
	private int status = 0;
	public String knapsack(int value[], int weight[], int maxWeight)
	{
		
		this.maxWeight = maxWeight;
		this.value = value;
		this.weight = weight;
		
		pickUpI(0,0,0,0);
		return String.format("最大:%d\n方式:%s", maxValue,Integer.toBinaryString(status));
	}
	public void pickUpI(int i,int sumWeight,int sumValue,int status)
	{
		if(i>=value.length)	{
			
			if(sumValue>maxValue)
			{
				maxValue = sumValue;
				this.status = status;
			}
			return;
		}
		pickUpI(i+1,sumWeight,sumValue,status);

		if(maxWeight-sumWeight>=weight[i])
		{
			pickUpI(i+1,sumWeight+weight[i],sumValue+value[i],status+1);
		}
	}
	public static void main(String[] args) {
		ZeroOneKnapsackInBackTracking zok = new ZeroOneKnapsackInBackTracking();
		int value[] = {20,30,65,40,60};
		int weight[] = {10,20,30,40,50};
		int a=zok.knapsack(value, weight,100);
		System.out.println(a);
		
	}
}
