package test;

import java.util.ArrayList;

/**
 * 输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，
 * 例如，如果输入如下矩阵：{1 ,  2 , 3 , 4 },
					{5  , 6  ,7  ,8 },
					{9 , 10, 11 ,12 },
			    	{13 ,14 ,15 ,16 }
 * 
 * 则依次打印出数字		1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.
 */
public class PlalindromeMatrix {
	public ArrayList<Integer> printMatrix(int [][] matrix) {
		
		int m = matrix.length-1;
		int n = matrix[0].length-1;
		int t = (m+1)*(n+1);
		int i=0;
		int z=0;
		int k=-1,p=0;
		out1:
		while(i!=t) {
			for(k++;k<=m-z;k++) {
				System.out.print(matrix[p][k]+" ");
				if(++i>t)	break out1;
			}
			k--;
			for(p++;p<=n-z;p++){
				System.out.print(matrix[p][k]+" ");
				if(++i>t)	break out1;
			}
			p--;
			for(k--;k>=z;k--) {
				System.out.print(matrix[p][k]+" ");
				if(++i>t)	break out1;
			}
			k++;
			for(p--;p>z;p--) {
				System.out.print(matrix[p][k]+" ");
				if(++i>t)	break out1;
			}
			p++;
			z++;
		}
		return null;
		
    }
	
	public static void main(String[] args) {
		int matrix[][] = {1}
				
		};
		PlalindromeMatrix pdm = new PlalindromeMatrix();
		pdm.printMatrix(matrix);
	}
}
